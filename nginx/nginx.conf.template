{% if grains['os'] == 'Fedora' %}
{% set nginx_user = 'nginx' %}
{% elif grains['os'] == 'Debian' %}
{% set nginx_user = 'www-data' %}
{% endif %}
{%- macro printproxy(vhost,defaultport) %}
  server {
    listen {{ vhost.listen4 | default("") }}{{ vhost.port | default(defaultport) }}{% if vhost.cert is defined and not pillar['disable_tls'] %} http2 ssl{% endif %};
    listen {{ vhost.listen6 | default("[::]:") }}{{ vhost.port | default(defaultport) }}{% if vhost.cert is defined and not pillar['disable_tls'] and not pillar['disable_tls'] %} http2 ssl{% endif %};
{%- if vhost.cert is defined and not pillar['disable_tls'] %}
    ssl_certificate /etc/nginx/certs/{{ vhost.cert }}.crt;
    ssl_certificate_key /etc/nginx/private/{{ vhost.cert }}.key;
    ssl_stapling on;
    ssl_trusted_certificate /etc/nginx/certs/{{ vhost.cert }}.crt;
    ssl_stapling_verify on;

    proxy_set_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    proxy_set_header X-Frame-Options "DENY";
    proxy_set_header X-XSS-Protection "1; mode=block";
    proxy_set_header X-Content-Type-Options "nosniff"; 
{%- endif %}
    server_name {{ vhost.servername | join(' ') }};

    location /basic_status {
      stub_status;
      access_log off;
    }
{%- if pillar['redirect_letsencrypt'] is defined and pillar['redirect_letsencrypt'] == "local" %}
    location /.well-known/acme-challenge {
      root /srv/certs/;
    }
{%- endif %}
    
{%- if vhost.proxies is defined -%}
{%- for proxy in vhost.proxies %}
    location {{ proxy.location | default('/') }} {
      proxy_pass {{ proxy.proto | default('http') }}://{{ proxy.address }}:{{ proxy.port | default(80) }}/{{ proxy.path | default('') }};
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Ssl {% if vhost.cert is defined %}on{% else %}off{% endif %};
{%- if proxy.large is defined %}
      proxy_request_buffering off;
      client_max_body_size 0;
{%- endif%}
      proxy_http_version 1.1;
{%- if proxy.custom is defined -%}
{%- for directive in proxy.custom %}
{%- set command = directive.pop(0) %}
      {{ command }} '{{ directive | join('\' \'') }}';
{%- endfor -%}
{%- endif %}
    }
{%- endfor -%}
{%- endif %}
  }
{% endmacro %}
user                            {{ nginx_user }};
worker_processes                auto;
error_log                       /var/log/nginx/error.log;
pid                             /run/nginx.pid;

events {
                                worker_connections 1024;
}

http {
  log_format                    main  '$remote_addr - $remote_user [$time_local] "$request" '
                                      '$status $body_bytes_sent "$http_referer" '
                                      '"$http_user_agent" "$http_x_forwarded_for"';

  access_log                    /var/log/nginx/access.log  main;
  

  sendfile                      on;
  tcp_nopush                    on;
  tcp_nodelay                   on;
  keepalive_timeout             65;
  types_hash_max_size           2048;
  				                
  gzip                          on;
  gzip_comp_level               5;
  gzip_http_version             1.0;
  gzip_min_length               0;
  gzip_types                    text/plain text/html text/css image/x-icon  application/x-javascript;
  gzip_vary                     on;
  				                
  include                       /etc/nginx/mime.types;
  default_type                  application/octet-stream;
  include                       /etc/nginx/conf.d/*.conf;
  ssl_protocols                 TLSv1.2;

  ssl_buffer_size 16k;
  ssl_dhparam                   '/etc/nginx/dhparams.pem';
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve secp384r1;  
  ssl_prefer_server_ciphers     on;
  
  ssl_session_tickets on;
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 1h;

  fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=fcgicache:100m inactive=60m;
  fastcgi_cache_key "$scheme$request_method$host$request_uri";


{%- if pillar['nginx_vhosts'] is defined and pillar['nginx_vhosts'][grains['id']] -%}
{%- for vhost in pillar['nginx_vhosts'][grains['id']] -%}
{%- if vhost.https_redirect is defined and vhost.https_redirect and not pillar['disable_tls'] -%}
{%- for name in vhost.servername %}
  server {
    listen {{ vhost.listen4 | default("") }}80;
    listen {{ vhost.listen6 | default("[::]:") }}80;
    server_name {{ name }};  
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";

{%- if pillar['redirect_letsencrypt'] is defined and pillar['redirect_letsencrypt'] %}
    location /.well-known/acme-challenge {
    {%- if pillar['redirect_letsencrypt'] == "local" %}
      root /srv/certs/;
    {%- else %}
      proxy_pass http://{{ pillar['redirect_letsencrypt'] }}:80/.well-known/acme-challenge;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
    {%- endif %}
    }
{%- endif %}
    
    location {{ vhost.path | default('/') }} {
      rewrite     ^(.*)   https://{{ name }}$1 permanent;
    }
  }
{%- endfor -%}
{{ printproxy(vhost, 443) }}  
{%- else -%}
{{ printproxy(vhost, 80) }}
{%- endif -%}
{%- endfor -%}
{%- endif %}
}